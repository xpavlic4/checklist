CREATE TABLE IF NOT EXISTS vets (
  id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  first_name TEXT,
  last_name  TEXT
);
CREATE INDEX ON vets (last_name);

CREATE TABLE IF NOT EXISTS specialties (
  id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT
);
CREATE INDEX ON specialties (name);

CREATE TABLE IF NOT EXISTS vet_specialties (
  vet_id       INT NOT NULL REFERENCES vets (id),
  specialty_id INT NOT NULL REFERENCES specialties (id),
  UNIQUE (vet_id, specialty_id)
);

CREATE TABLE IF NOT EXISTS types (
  id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT
);
CREATE INDEX ON types (name);

CREATE TABLE  if not exists source_types(
                            id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            name VARCHAR(80)
);

CREATE TABLE IF NOT EXISTS owners (
  id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  first_name TEXT,
  last_name  TEXT,
  address    TEXT,
  city       TEXT,
  telephone  TEXT
);
CREATE INDEX ON owners (last_name);

CREATE TABLE IF NOT EXISTS pets (
  id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name       TEXT,
  premisa     TEXT,
  birth_date DATE,
  type_id    INT REFERENCES types (id),
  owner_id   INT REFERENCES owners (id)
);
CREATE INDEX ON pets (name);
CREATE INDEX ON pets (owner_id);

CREATE TABLE IF NOT EXISTS visits (
  id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  pet_id      INT REFERENCES pets (id),
  visit_date  DATE,
  description TEXT,
  premise     TEXT,
  predicate   TEXT
);
CREATE INDEX ON visits (pet_id);

CREATE TABLE IF NOT EXISTS cases (
                     id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                     name       VARCHAR(255),
                     email VARCHAR(30)
);

CREATE INDEX IF NOT EXISTS cases_name ON cases (name);
CREATE TABLE IF NOT EXISTS arguments (
                         id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         name       VARCHAR(255),
                         premise       VARCHAR(255),
                         predicate       VARCHAR(255),
                         warrant       VARCHAR(255),
                         ordering    INTEGER,
                         type_id    INTEGER references types(id),
                         source_id  INTEGER references source_types(id) DEFAULT 0,
                         case_id   INTEGER references cases(id),
                         parent_id INTEGER references arguments(id)
);
CREATE TABLE IF NOT EXISTS evaluations (
                           id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           verification_status VARCHAR(30),
                           intensity  VARCHAR(30),
                           argument_id INTEGER references arguments(id)
);
create table IF NOT EXISTS ARGUMENT_TYPES (
                              ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              NAME VARCHAR(255)
);
CREATE SEQUENCE if not exists id_seq START WITH 100 INCREMENT BY 1;

CREATE TABLE IF NOT EXISTS users (
                                   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   name       VARCHAR(255),
                                   email VARCHAR(255) NOT NULL UNIQUE,
                                   provider VARCHAR(255),
                                   providerId VARCHAR(255),
                                   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS user_email ON cases (email);

